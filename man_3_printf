.TH PRINTF 3 "27 March 2025" "Project _printf.c" "Library Functions"

.SH NAME
_printf \- produces formatted output

.SH SYNOPSIS
#include <stdio.h>
.int _printf(const char *format, ...);

.SH DESCRIPTION
The _printf function is a simplified version of the standard printf function. It processes a format string and prints the corresponding arguments to the standard output (stdout).

It supports the following format specifiers:

.IP %c
Prints a single character.
.IP %s
Prints a string.
.IP %%
Prints a percent sign.
.IP %d
Prints a signed decimal number.
.IP %i
Prints a signed integer in base 10.

.SH PARAMETERS
.TP
format
A pointer to a string that contains both format specifiers and the characters to be printed.

.TP
...
A variable number of arguments that correspond to the format specifiers in the format string.

.SH RETURN VALUE
On success, _printf returns the total number of characters printed, excluding the null byte. If an error occurs, such as a NULL format string or an invalid format specifier, the function returns -1.

.SH EXAMPLES
.TP
_printf("Hello %s!\\n", "World");
Prints: Hello World!

.TP
_printf("Character: %c\\n", 'A');
Prints: Character: A

.TP
_printf("Percent sign: %%\\n");
Prints: Percent sign: %

.TP
_printf("Number: %d\\n", 22);
Prints: Number: 22

.TP
_printf("Invalid specifier: %z\\n");
Prints: %z (the percent sign and the specifier itself)

.SH AUTHORS
Brenda Pollagba, Abdellah Dydouh
